##
##  GENERATED BY ANSIBLE
##  IF YOU NEED TO CHANGE THIS FILE - MAKE A COPY BECAUSE ANSIBLE WILL OVERRIDE YOUR CHANGES ON THE NEXT RUN
##
version: "2.2"
networks:
  back:
    driver: bridge
    ipam:
      config:
        - subnet: {{ docker_net_ip }}
          gateway: {{ docker_net_ip_gw }}
services:
  elasticsearch:
    image: "elasticsearch:7.6.1"
    networks:
      back:
        ipv4_address: {{ docker_net_ip_elasticsearch }}
    environment:
      - discovery.type=single-node
    ports: ["9200:9200", "9300:9300"]
    volumes:
      - "~/docker/es/data:/usr/share/elasticsearch/data"
    container_name: elasticsearch-7.6.1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 15s
      timeout: 10s
      retries: 3

  kibana:
    image: "kibana:7.6.1"
    networks:
      back:
        ipv4_address: {{ docker_net_ip_kibana }}
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://{{ docker_net_ip_elasticsearch }}:9200
    ports: ["5601:5601"]
    depends_on: ["elasticsearch"]
    container_name: kibana-7.6.1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 15s
      timeout: 10s
      retries: 3

  prometheus:
    image: "prom/prometheus:v2.17.1"
    networks:
      back:
        ipv4_address: {{ docker_net_ip_prometheus }}
    ports: ["9090:9090"]
    volumes:
      - "../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    container_name: prometheus-2.17.1
### no curl on the image yet - need an alternative
###    healthcheck:
###      test: ["CMD", "curl", "-f", "http://localhost:9090"]
###      interval: 15s
###      timeout: 10s
###      retries: 3

  grafana:
    image: "grafana/grafana:6.5.1"
    networks:
      back:
        ipv4_address: {{ docker_net_ip_grafana }}
    environment:
      - "GF_AUTH_BASIC_ENABLED=true"
      - "GF_AUTH_ANONYMOUS_ENABLED=false"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
      - "GF_SECURITY_ADMIN_PASSWORD=admin"
      - "GF_PANELS_DISABLE_SANITIZE_HTML=true"
    ports: ["3000:3000"]
    volumes:
      - "../grafana/dashboards:/etc/grafana/provisioning/dashboards:z"
      - "../grafana/datasources:/etc/grafana/provisioning/datasources:z"
    depends_on: ["prometheus"]
    container_name: grafana-6.5.1
### no curl on the image yet - need an alternative
###    healthcheck:
###      test: ["CMD", "curl", "-f", "http://localhost:3000"]
###      interval: 15s
###      timeout: 10s
###      retries: 3

  reaper:
    image: "thelastpickle/cassandra-reaper:latest"
    networks:
      back:
        ipv4_address: {{ docker_net_ip_cassandra_reaper }}
    environment:
      - "REAPER_JMX_AUTH_USERNAME=cassandra"
      - "REAPER_JMX_AUTH_PASSWORD=cassandra"
      - "REAPER_STORAGE_TYPE=cassandra"
      - "REAPER_CASS_CLUSTER_NAME={{ cassandra_cluster_name }}"
      - "REAPER_CASS_CONTACT_POINTS=['{{ cassandra_node_ip }}']"
      - "REAPER_CASS_KEYSPACE=reaper_db"
    ports: ["8080:8080","8081:8081"]
    container_name: cassandra-reaper
### no curl on the image yet - need an alternative
###    healthcheck:
###      test: ["CMD", "curl", "-f", "http://localhost:8080"]
###      interval: 15s
###      timeout: 10s
###      retries: 3
