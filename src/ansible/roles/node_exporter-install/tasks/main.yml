---
- name: stop node_exporter systemd service
  systemd:
    name: node_exporter.service
    state: stopped
  ignore_errors: true

- name: download node_exporter
  get_url:
    url: "{{ node_exporter_url }}"
    dest: /tmp/
    mode: '0440'
    checksum: "{{ node_exporter_checksum }}"

- name: find node_exporter file
  find:
    paths: /tmp
    patterns: "{{ node_exporter_arch_file_pattern }}"
    recurse: no
  register: node_exporter_file_name

- debug: msg={{ node_exporter_file_name.files[0].path }}

- name: un-archiving node_exporter into /opt/cassandra
  unarchive:
    remote_src: yes
    src: "{{ node_exporter_file_name.files[0].path }}"
    dest: /opt/cassandra/
    owner: cassandra
    group: cassandra

- name: find node_exporter file
  find:
    paths: /opt/cassandra/
    patterns: "{{ node_exporter_unarch_folder_pattern }}"
    file_type: directory
    recurse: no
  register: node_exporter_forder_name

- debug: msg={{ node_exporter_forder_name.files[0].path }}

- name: create node_exporter symbolic link
  file:
    src: "{{ node_exporter_forder_name.files[0].path }}"
    dest: /opt/cassandra/node_exporter
    owner: cassandra
    group: cassandra
    state: link

- name: install systemd node_exporter.service unit
  template:
    src: "{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
    mode: 0644
  with_items:
    - node_exporter.service

- name: enable and start node_exporter systemd service
  systemd:
    name: node_exporter.service
    daemon_reload: yes
    enabled: true
    state: started